module HtmlHelper exposing (..)

import MainTypes exposing (Msg)
import Html exposing (Html, table, tr, td)
import Html.Attributes exposing (..)
import List

makeTable : (Row -> Html Msg) -> (Row -> Bool) -> List String -> List Row -> Html Msg
makeTable render filter headers rows =
  <table>
    <thead>
      {:headers |> List.map makeHeader}
    </thead>
    <tbody>
      {:rows |> List.filter filter |> List.map render}
    </tbody>
  </table>

type alias Row = (String, String)

makeHeader : String -> Html Msg
makeHeader title =
  <tr>
    <th colspan="2">{=title}</th>
  </tr>

makeRow : Row -> Html Msg
makeRow row =
  let
    (title, content) = row
  in
    <tr>
      <td class="header left">{=title}</td>
      <td>{=content}</td>
    </tr>
