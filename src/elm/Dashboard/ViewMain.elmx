module Dashboard.ViewMain exposing (view)

import MainTypes exposing (..)

import Html exposing (Html, Attribute, label, text, div, input, button, ul, li, a)
import Html.Attributes exposing (..)
import Html.Events exposing (onInput, onClick)
import Util exposing (choose)
import Decoders.Conditions exposing (Conditions)

view : Model -> Html Msg
view model =
  let
    isMetric = choose (model.dashboard.scale == Metric) "selected"
    isUS = choose (model.dashboard.scale == US) "selected"
  in
    <div class="dashboard">
      <a href="https://github.com/marriola/weather-portal-elm" class="github" target="_blank"></a>

      <input type="text" value={model.dashboard.search} onInput={TagDashboardMsg << Change} />
      <button type="button" onClick={TagContentMsg Search}>Search</button>
      <label><input type="radio" name="scale" value={toString Metric} checked={isMetric} onClick={TagDashboardMsg (SelectScale Metric)} /> Metric</label>
      <label><input type="radio" name="scale" value={toString US} checked={isUS} onClick={TagDashboardMsg (SelectScale US)} /> US</label>

      {(nameplates model.content.places)}
    </div>

nameplates : List Conditions -> Html Msg
nameplates places =
  <div>
    {:List.map makeNameplate places}
  </div>

makeNameplate : Conditions -> Html Msg
makeNameplate c =
  --let
    --(city, state, country) = c.display_location
  --in
    <span class="panel">
      <a href="#" onClick={TagContentMsg (LoadCity (c.display_location.city, c.display_location.state, c.display_location.country))}>
        {=c.display_location.full}
      </a>
    </span>
